#!/usr/bin/python
# -*- coding: utf-8 -*-

#瀑布模型
瀑布模型强调每一步都应该系统化的考量和分析，该模式强调系统开发过程需有完整的规划、分析、设计、测试及文件等管理与控制，能确保软件的品质。

以我目前呆的公司为例，缺点：
1. 创业公司节奏快，很多时候都是一个想法，开发直接就开始干活，在这过程中，文档产出很少；
2. 特别依赖某个人，所以创业公司成本很高，因为老员工不止要有新的任务，还需要给新同事讲解以前的一些代码，因为文档少，如果老同事请假，会耽误开发进度；
3. 没有用户的参与，创业公司每发布一个版本都需要收集用户数据进行分析；
4. 响应客户需求时间慢；

可以借鉴瀑布模型的：
1. 创业公司讲究效率，但该有的文档还是需要有的，可以简化步骤，开发开发过程中，便可以在代码中注释，方便后续写文档；
2. 该有的流程必须要有，比如说有想法，先给到产品，告知产品这个功能很重要，获取沟通后，从产品那里获得排期，开发完成后，过测试，最后发布；
3. 注意收集用户信息，用户信息是具有极高价值的；
、
以前的做法：因为受别人的影响，有想法立马实施，这样才是最好的，一句名言叫just do it now；
缺点：
1. 为什么要做；
2. 有什么资源可以做；
3. 自己不会做，别人为什么帮助你做；
4. 这样做，在自身不够强大的情况下，无法取得更高优先级；

现在以及以后的做法：把现有想法写出来，具体写出来，该怎么做，把这些事提交给产品或者项目负责人，说清楚投入和产出以及带来的效果，在还是不通过的情况下，而
事情又是非常紧急的情况下，把事情升级，寻求更高级别的资源。

#敏捷开发
敏捷开发是以人为本，专注交付对客户有价值的软件，在高度协作的环境中，使用迭代式的方式进行增量开发，经常根据反馈进行思考，反省和总结，不停的自我调整和完善
，让软件开发与交付清凉而敏捷。

#极限编程 Extreme programming 是敏捷软件开发中可能是最富有成效的几种方法学之一
(https://github.com/yangyang510/py/blob/master/Image/%E6%95%8F%E6%8D%B7%E5%BC%80%E5%8F%91%E7%A4%BA%E6%84%8F%E5%9B%BE.png)

